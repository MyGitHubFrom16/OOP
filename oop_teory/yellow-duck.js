`   
    #1 Yellow-Duck.net

    #2 ~
    в 2х словах:
        << осн. идея ООП >>  в том - что ВСЕ состоит из объектов
            (в отл. от процедурного программированния, где каждая программа = это один большой
            кусок кода, состоящий из множества модулей, функций, переменных)

    любая ООП программа - это набор, взаимодействующих друг с другом компонентов(объектов)
    
    ВАЖНЫЙ МОМЕНТ: 
        при создании ООП программ - ответственность за работу приложения распределяеться межу всеми объектами
            каждый объект отвечает только сам за себя и явл. полностью самостоятельным

        все объекты взимодействуют между собой как "черные ящики", т.е. у каждого объекта есть свой публичный интерфейс
            с пом.кот. он общаеться со всей остальной программой, и при этом вся его внутрення реализация полностью скрыта -> инкапсуляция




    #3/4 КЛАСС -> ОБЪЕКТ          << ОСНОВА ОСНОВ >>   75% всей идеи ООП
        :) с одной стороны это Одно и тоже -> с другой это Разные вещи  

        класс - это фрагмент кода с именем, и для того что бы воспользаваться этоим кодом -> 
            нужно создать(инициализировать) объект из этого класс           
                /___________/                                         класс - это чертеж(шаблон) с точным описанием объекта
               /          инициализация _ _ _
              /                               \
        объект (экземпляр класс)               \ _ _  в строго - типизированных языках TypeScript)))
                                                           private _userService: UserService;     в роли типа выступент сам класс




    #6 МЕТОДЫ
    все методы можно разделить на 2 части:
        методы Экземпляра - вызываеться из объекта
        методы Класса (статический методы) - вызываеться напрямую из класса
            constructor


   #8 НАСЛЕДОВАИЕ
   создание более специфичных классов на основе уже существующих
    Класс может наследовать характеристики от другого класса.
    Термины наследования: 


   #9 Инкапсуляция данных

   #10 АБСТРАКЦИЯ
   абстракция явл. основой ООП и позволяет работать с объектами не вдаваясь в детали их реализации.

   #11 ПОЛИМОРФИЗМ
   - наследование 
   - абстрактный метод/класс 













         
`